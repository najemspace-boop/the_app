rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(resource) {
      return request.auth.uid == resource.data.userId || request.auth.uid == resource.data.ownerId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isEmailVerified() {
      return request.auth.token.email_verified == true;
    }
    
    function hasRole(role) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == role;
    }

    // User profiles
    match /profiles/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // KYC requests
    match /kycRequests/{requestId} {
      allow read: if isAuthenticated() && (isOwner(resource) || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Property listings
    match /listings/{listingId} {
      allow read: if true; // Public read for browsing
      allow create: if isAuthenticated() && isEmailVerified() && hasRole('owner') && request.auth.uid == request.resource.data.ownerId;
      allow update: if isAuthenticated() && (isOwner(resource) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource) || isAdmin());
      
      // Calendar subcollection
      match /calendar/{date} {
        allow read: if true;
        allow write: if isAuthenticated() && (isOwner(get(/databases/$(database)/documents/listings/$(listingId))) || isAdmin());
      }
    }

    // Bookings
    match /bookings/{bookingId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.guestId || 
        request.auth.uid == resource.data.hostId || 
        isAdmin()
      );
      allow create: if isAuthenticated() && isEmailVerified() && request.auth.uid == request.resource.data.guestId;
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.hostId || 
        request.auth.uid == resource.data.guestId || 
        isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Reservations
    match /reservations/{reservationId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.guestId || 
        request.auth.uid == resource.data.hostId || 
        isAdmin()
      );
      allow create: if isAdmin(); // Only created by Cloud Functions
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.hostId || 
        request.auth.uid == resource.data.guestId || 
        isAdmin()
      );
      allow delete: if isAdmin();
    }

    // Conversations and messages
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated() && (
        request.auth.uid in resource.data.participants || 
        isAdmin()
      );
      
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && (
          request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants ||
          isAdmin()
        );
      }
    }

    // Reviews
    match /listings/{listingId}/reviews/{reviewId} {
      allow read: if true; // Public read
      allow create: if isAuthenticated() && isEmailVerified() && request.auth.uid == request.resource.data.userId;
      allow update: if isAuthenticated() && (isOwner(resource) || isAdmin());
      allow delete: if isAuthenticated() && (isOwner(resource) || isAdmin());
    }

    // User favorites
    match /profiles/{userId}/favorites/{listingId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Amenities (read-only for users, write for admin)
    match /amenities/{amenityId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories (read-only for users, write for admin)
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Reports
    match /reports/{reportId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.reporterId;
      allow update, delete: if isAdmin();
    }

    // Admin analytics (admin only)
    match /analytics/{document=**} {
      allow read, write: if isAdmin();
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
